# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: default

variables:
  buildConfiguration: 'Release'
  ngBuildConfiguration: '--prod'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'LocalDirectory'
    jdkFile: 'D:/jdk-11.0.10_windows-x64_bin.zip'
    jdkDestinationDirectory: '/builds/binaries/externals'
    cleanDestinationDirectory: true

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloudAngular'
    organization: '2manycooksinthekitchen'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: '2ManyCooksInTheKitchen_InTheKitchenApp'
    cliProjectName: 'InTheKitchenApp'
    cliSources: '$(System.DefaultWorkingDirectory)/angularapp'
    extraProperties:
      sonar.flex.cobertura.reportPaths=$(System.DefaultWorkingDirectory)/angularapp/coverage/inthekitchen/cobertura-coverage.xml
      # sonar.javascript.lcov.reportPaths=$(System.DefaultWorkingDirectory)/angularapp/**/coverage/lcov.info


- script: |
    cd "$(System.DefaultWorkingDirectory)/AngularTest"
    npm install -g @angular/cli
    npm install --save-dev @angular-devkit/build-angular
    npm install
    ng build --prod --verbose
  displayName: 'npm install and build'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: '$(System.DefaultWorkingDirectory)/angularapp'
    verbose: true
  displayName: 'npm install dependencies'

# - task: Npm@1
#   inputs:
#     command: 'custom'
#     workingDir: '$(System.DefaultWorkingDirectory)/angularapp'
#     customCommand: 'install puppeteer --save-dev'
#   displayName: 'npm install puppeteer'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)/angularapp'
    customCommand: 'run build -- $(ngBuildConfiguration)'
    verbose: true
  displayName: 'npm build'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)/angularapp'
    customCommand: 'run test -- --watch=false --code-coverage'
  continueOnError: true
  displayName: 'npm run tests'

- task: PublishCodeCoverageResults@1
  condition: succeededOrFailed()
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/angularapp/coverage/inthekitchen/cobertura-coverage.xml'
    pathToSources: '$(System.DefaultWorkingDirectory)/angularapp'

# - task: PublishCodeCoverageResults@1
#   inputs:
#     codeCoverageTool: 'Cobertura'
#     summaryFileLocation: '$(System.DefaultWorkingDirectory)/angularapp/**/coverage/lcov.info'
#     pathToSources: '$(System.DefaultWorkingDirectory)/angularapp'
#     reportDirectory: '$(System.DefaultWorkingDirectory)/angularapp/**/coverage'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/angularapp/dist/'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Azure subscription 1(9397ed34-7cce-4ecb-964e-961c2674cac7)'
    appType: 'webApp'
    appName: 'inthekitchenfront'
    package: '$(Build.ArtifactStagingDirectory)/*.zip'
    deploymentMethod: 'auto'
